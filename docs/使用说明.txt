========================================
牦牛图片跨案件号相似度分析系统 - 使用说明
========================================

系统版本：v2.0 (带用量监测和双钥匙授权)
开发时间：2025年8月22日

========================================
一、系统简介
========================================

本系统是基于YOLO模型和感知哈希算法的牦牛图片相似度分析工具，
专门用于检测跨案件号的相似图片。系统具备完整的用量监测和
双钥匙授权机制，确保使用安全和授权控制。

主要功能：
1. 自动分类牦牛图片（使用YOLO模型）
2. 跨案件号相似度检测（感知哈希算法）
3. 使用量实时监测和记录
4. 双钥匙授权系统（甲方-乙方授权流程）
5. 防篡改安全机制
6. 详细使用报告导出

========================================
二、系统要求
========================================

硬件要求：
- CPU：Intel i5或AMD Ryzen 5以上
- 内存：8GB以上（推荐16GB）
- 硬盘：至少20GB可用空间
- 网络：用于双钥匙授权交互

软件要求：
- Windows 10/11 或 Linux
- Python 3.9以上版本
- Conda环境（推荐）

========================================
三、安装和启动
========================================

1. 环境准备：
   conda activate yolo11
   pip install -r requirements.txt

2. 启动系统：
   python app.py

3. 访问系统：
   打开浏览器访问：http://127.0.0.1:5000

========================================
四、基础使用流程
========================================

步骤1：检查授权状态
- 打开系统首页
- 查看"授权信息"面板
- 确认授权状态为"已授权"
- 查看剩余图片配额

步骤2：上传图片文件
- 准备包含牦牛图片的ZIP文件
- 拖拽或点击上传到系统
- 等待系统自动处理

步骤3：查看处理结果
- 观察实时进度条
- 查看处理统计信息
- 下载相似图片分组结果
- 下载CSV详细记录

步骤4：监控使用量
- 处理完成后授权信息自动更新
- 查看已使用和剩余图片数量
- 导出使用量报告

========================================
五、双钥匙授权系统使用
========================================

5.1 甲方操作（系统使用者）：

步骤1：生成客户端钥匙
- 使用系统处理一些图片（产生使用记录）
- 点击"生成客户端钥匙"按钮
- 下载客户端钥匙JSON文件
- 将文件发送给授权方（乙方）

步骤2：等待授权钥匙
- 等待乙方验证并生成授权钥匙
- 接收乙方发回的授权钥匙文件

步骤3：加载新授权
- 点击"上传授权文件"按钮
- 选择乙方提供的授权钥匙文件
- 系统验证并加载新的授权配额

5.2 乙方操作（授权提供方）：

步骤1：接收客户端钥匙
- 收到甲方发送的客户端钥匙文件
- 保存到系统目录

步骤2：生成授权钥匙
- 运行命令：python provider_key_generator.py
- 选择客户端钥匙文件
- 设置授权参数：
  * 基础授权图片数
  * 授权有效期天数
  * 每日最大会话数
- 生成授权钥匙文件

步骤3：发送授权钥匙
- 将生成的授权钥匙文件发送给甲方
- 甲方加载后即可获得新的使用权限

========================================
六、文件说明
========================================

主要程序文件：
- app.py                    : 主程序文件
- license_manager_simple.py : 授权管理器
- dual_key_system.py        : 双钥匙系统核心
- group3.py                 : 图片处理算法

工具脚本：
- client_key_generator.py   : 客户端钥匙生成工具
- provider_key_generator.py : 授权钥匙生成工具
- create_test_license.py    : 测试授权创建工具

测试脚本：
- demo_tamper_protection.py : 防篡改功能演示
- simple_test.py           : 核心功能测试
- test_dual_key_system.py  : 双钥匙系统测试

数据目录：
- license_data/            : 授权和使用量数据
- uploads/                 : 上传的ZIP文件
- results/                 : 处理结果文件
- dual_keys/              : 双钥匙文件存储

========================================
七、安全特性
========================================

7.1 使用量监测：
- 每次图片处理自动记录使用量
- 哈希链技术防止使用记录被篡改
- 实时显示已使用和剩余配额
- 详细的使用量报告导出

7.2 双钥匙授权：
- 甲方无法伪造授权文件
- 乙方完全控制授权参数
- 使用量数据必须真实上报
- 授权有效期和配额严格控制

7.3 防篡改机制：
- HMAC-SHA256防篡改哈希保护
- 任何参数修改都会被检测
- 甲方无法获取乙方私钥种子
- 多层验证确保授权有效性

========================================
八、常见问题解决
========================================

Q1：页面显示"未授权"状态
A1：检查license_data/license.json文件是否存在且格式正确

Q2：无法生成客户端钥匙
A2：需要先运行图片处理产生使用记录

Q3：授权文件上传失败
A3：检查文件格式是否为JSON，内容是否完整

Q4：处理速度很慢
A4：检查硬件配置，确保有足够内存和CPU资源

Q5：防篡改验证失败
A5：说明安全机制正常工作，不要修改授权文件

Q6：达到配额上限
A6：联系授权方获取新的授权钥匙增加配额

========================================
九、技术支持
========================================

如遇到技术问题，请提供以下信息：
1. 错误信息截图
2. 操作步骤描述
3. 系统配置信息
4. 授权状态信息

联系方式：
请通过系统开发方提供的官方渠道联系技术支持。

========================================
十、版权声明
========================================

本系统为专有软件，版权归开发方所有。
未经授权不得复制、修改或分发本系统。
使用本系统需遵守相关授权协议。


技术栈：Python + Flask + YOLO + OpenCV
安全等级：企业级

========================================
更新记录：
v2.0 (2025-08-22) - 添加用量监测和双钥匙授权
v1.0 (2025-08-04) - 基础图片相似度分析功能
========================================